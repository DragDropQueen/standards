Environmment
  Shell
    PATH
    bash_profile
    readline quick-keys
    program [args]
    stdin/stdout/stderr
    env vars
    dirs
    current dir
    paths
      / ~ . ..
    common programs
      git/editor (vim/mate/atom/subl)/ack/ls/cd/cat/ruby/find/rm/mv/gem/curl/env/mkdir/which
    aliases
    functions
    Common commands
      cd
      ls
      pwd
      rm
      rm -rf
      mv
      mkdir
      touch
      cp
    Permissions
    SSH & keys
  Editor
    Common keyboard shortcuts
    Installing packages
  Getting ruby installed and running it
  Getting rails installed and running it
  Pry
  Seeing is believing
Ruby
  Basics
    Index numbers
      SW know that computers start counting at 0.
      SW know that a negative index number counts from the end of the element.
    Object-Oriented Programming
  Strings
    Substrings with #slice/word[]
    Interpolation
      "#{}"
      "" + variable + ""
    Regular Expressions
  Numbers
    Operations
      +
      -
      /
      *
      %
      **
    Floats
    Integers
    BigDecimal
  Constants
  Arrays
  Hashes
  Symbols
  Blocks
  Conditionals
    If/elsif/else
      1-line if statement
      ternary
    While
    Unless
  Boolean Logic
    True/truthy, false/falsy
    Comparison operators
      <, >, <=, >=, ==, !=
      SW know that comparison operators return true or false.
    Logical operators
      &&, ||
  Methods
    Changing class
      #to_i
      #to_f
      #to_s
      #to_a
      #to_hash
    Looping methods
      #times
      break
    Parameters for methods
    String Methods
      #split with and without parameters
      #length/#size
    Enumerable methods
      SW know that enumerable methods traverse and search through collections.
      #each
        SW know that the each method is the base for all enumerable methods but that it should be used infrequently.
        SW know that the return value for each is the original collection.
      iterating over collection
        #map/#collect
        #reduce/#inject
          SW know that reduce/inject combines the elements in a collection.
        #sort_by
      filtering a collection
        #select
        #detect
        #min & #max
        #reject
        #find
          SW know that find is a method used on collections.
          SW know that find returns the first element that meets a specified criteria.
      others
        #count
          SW know that count is a method used on collections.
          SW know that count returns the number of elements that meet a specified criteria.
        #reduce/#inject
          SW know that inject/reduce is a method used on collections.
          SW know that
        #zip
          SW know that zip is a method used on arrays.
          SW know that zip produces a 2D array by pairing elements at the same index position in two or more starting arrays.
        #group_by
          SW know that group_by returns a hash.
          SW know that the keys of the returned hash are the results of the block and the values are arrays of the original elements.
    Predicate methods
      SW know that a predicate method is written "___?" and returns true or false.
      #none?
        SW know that none? is a method used on collections.
        SW know that this method checks that no elements meet a specified criteria and returns true or false.
      #one?
        SW know that one? is a method used on collections.
        SW know that this method checks to see if exactly one element meets a specified criteria and returns true or false.
      #all?
        SW know that all? is a method used on collections.
        SW know that this method checks to see if every element meets a specified criteria and returns true or false.
      #any?
        SW know that any? is a method used on collections.
        SW know that this method checks for an element in an array that meets specified criteria and returns true or false.
      #include?
  Variables
    naming conventions
    assignment vs. comparison
    reassignment
    change and reassign value by increment (+=, -=, *=, /=)
  Nil
  Classes
    instances of classes
  Style Best Practices
    indentation
  irb
  bundler
  installing gems
  using gems
  APIs
  CSV
  Finding code
    (gem which)
    which
    pry show-source
    method.source_location
  reflection
  using documentation
Thinking
  read that debugging thing
Git
  Setting up Github
  Initialize a repository
  Adding files (all vs. one at a time)
  Creating remote
  Adding remote
  Committing code
    commit message conventions
      start with present-tense verb
  Pushing code
  Pulling code
    rebasing
    fetching
  Branches
    Master
    Creating a feature branch
  Pull request on Github
Testing
  Best Practices
    First write test that will fail
    Run tests to show failure
    Implement smallest possible change to make test pass
  Rspec
  Minitest
Rails
Collaboration
  Setup
  Pairing
  Driver/navigator
  Communication
  Switching roles
Workflow
  Fast file switching
  Screen setup
  Window manager
  Keyboard shortcuts
